CREATE TABLE client (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    email VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(50) NOT NULL,
    telephone INT NOT NULL,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE client_address (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    user_id BIGINT REFERENCES client (id),
    city VARCHAR(50),
    country VARCHAR(50)
);

CREATE TABLE client_payment (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    user_id BIGINT REFERENCES client (id),
    payment_type VARCHAR(50),
    phoneNo INT NOT NULL
);

CREATE TABLE products (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    image VARCHAR(500) NOT NULL,
    description VARCHAR(50) NOT NULL,
    price INT NOT NULL,
    discount INT,
    quantity INT NOT NULL
);

CREATE TABLE shopping_session (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    user_id BIGINT REFERENCES client (id),
    total INT
);
CREATE TABLE cart_item (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    product_id BIGINT REFERENCES products (id),
    session_id BIGINT REFERENCES shopping_session (id),
    quantity INT,
    created_at TIMESTAMP,
    modified_at TIMESTAMP
);

CREATE TABLE order_items (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    order_id BIGINT REFERENCES order_details (id),
    product_id BIGINT REFERENCES products (id),
    quantity INT,
    created_at TIMESTAMP,
    modified_at TIMESTAMP
);
CREATE TABLE order_details (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    user_id BIGINT REFERENCES client (id),
    total INT,
    payment_id BIGINT REFERENCES payment_details (id),
    created_at TIMESTAMP,
    modified_at TIMESTAMP
    
);

CREATE TABLE payment_details(
    id BIGSERIAL NOT NULL PRIMARY KEY,
    amount INT NOT NULL,
    payment_type VARCHAR,
    status VARCHAR NOT NULL,
    created_at TIMESTAMP,
    modified_at TIMESTAMP
);

CREATE FUNCTION trigger_set_timestamp()
RETURNS TRIGGER AS $$
BEGIN
  NEW.created_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;


CREATE TRIGGER set_timestamp
BEFORE INSERT OR UPDATE ON client
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

///JUST EXAMPLE SELECT MAX(email) FROM client;
SELECT setval('email', (SELECT MAX(email) FROM client)+1);
